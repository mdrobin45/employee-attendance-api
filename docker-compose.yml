services:
  # PostgreSQL
  postgres:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - api-network

  # Migration
  migration:
    build:
      context: .
      dockerfile: Dockerfile
    command: npx prisma migrate deploy
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV:-production}
    networks:
      - api-network

  # API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - migration
    command: yarn start:prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - api-network

networks:
  api-network:
    driver: bridge

volumes:
  postgres_data: {}
